// For those who want the bleeding edge
plugins {
    id 'maven-publish'
    id 'net.minecraftforge.gradle' version '5.1.+'
    id 'wtf.gofancy.fancygradle' version '1.1.+'
    // See hack in settings.gradle for why this works
    id 'org.spongepowered.mixin' version '0.7.+'
    id 'eclipse'
}
// Strip Java 9-specific info from dependencies so Forge doesn't excrete bricks
apply from: 'java8ify.gradle'

version = "${project.modVersion}+MC${project.minecraftVersion}"
group = "leviathan143.loottweaker" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "LootTweaker"

sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8' // Need this here so eclipse task generates correctly.

ext.MIXIN_LOADER_CLASS = 'leviathan143.loottweaker.common.MixinLoader'

def mixins(runConfig) {
	runConfig.jvmArg "-Dfml.coreMods.load=$MIXIN_LOADER_CLASS"
	runConfig.jvmArg '-Dmixin.hotSwap=true'
}

minecraft {
    mappings channel: 'stable', version: project.mappingsVersion

    runs {
        client {
            taskName "$archivesBaseName Client"
            workingDirectory project.file('run/client')
            mixins(it)
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'saddle.disable', 'true'
            environment 'MC_VERSION', project.minecraftVersion
        }

        server {
            taskName "$archivesBaseName Server"
            mixins(it)
            workingDirectory project.file('run/server')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'saddle.disable', 'true'
            environment 'MC_VERSION', project.minecraftVersion
        }

        testClient {
            taskName "$archivesBaseName Client Tests"
            mixins(it)
            workingDirectory project.file('test/client')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            environment 'MC_VERSION', project.minecraftVersion
        }

        testServer {
            taskName "$archivesBaseName Server Tests"
            mixins(it)
            workingDirectory project.file('test/server')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            environment 'MC_VERSION', project.minecraftVersion
        }
    }
}

fancyGradle {
    patches {
        resources
        coremods
    }
}

mixin {
    add sourceSets.main, 'mixins.loottweaker.refmap.json'
    config 'loottweaker.mixins.json'
}

// FancyGradle isn't quite enough
configurations.all {
    resolutionStrategy {
        dependencySubstitution {
            substitute module('net.minecraftforge:legacydev') using module('net.minecraftforge:legacydev:0.2.4.0') because 'Fixes ATs'
        }
    }
}

repositories
{
    mavenCentral()
    maven
    {
        name "Jared"
        url "https://maven.blamejared.com"
    }
    maven
    {
        name 'JitPack'
        url 'https://jitpack.io'
    }
    maven
    {
        name 'Su5ed LegacyDev Fork'
        url = 'https://su5ed.jfrog.io/artifactory/maven/'
    }
	maven {
		url = 'https://repo.spongepowered.org/repository/maven-public/'
		content { includeGroup 'org.spongepowered' }
	}
}

dependencies
{
    minecraft "net.minecraftforge:forge:${project.minecraftVersion}-${project.forgeVersion}"

    implementation "CraftTweaker2:ZenScript:${project.crafttweakerVersion}"
    implementation fg.deobf("CraftTweaker2:CraftTweaker2-API:${project.crafttweakerVersion}")
    implementation fg.deobf("CraftTweaker2:CraftTweaker2-MC1120-Main:1.12-${project.crafttweakerVersion}")

    implementation "org.spongepowered:mixin:0.8.5"
    annotationProcessor "org.spongepowered:mixin:0.8.5:processor"

    testImplementation 'com.github.Daomephsta:Saddle:0.0.3'
    testImplementation 'org.assertj:assertj-core:3.13.2'
    // Use JUnit test framework
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.5.2'
    testImplementation 'org.junit.platform:junit-platform-launcher:1.5.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.5.2'
}

test {
    useJUnitPlatform()
}

jar {
    manifest {
        attributes([
            "Specification-Title": "LootTweaker",
            "Specification-Vendor": "Daomephsta",
            "Specification-Version": "1", // We are version 1 of ourselves
            "Implementation-Title": project.name,
            "Implementation-Version": "${version}",
            "Implementation-Vendor": "loottweaker",
            "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
			"FMLCorePlugin": MIXIN_LOADER_CLASS,
			"FMLCorePluginContainsFMLMod": "true",
            "TweakClass": "org.spongepowered.asm.launch.MixinTweaker"
        ])
    }
    finalizedBy('reobfJar')
}